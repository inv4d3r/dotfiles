source ~/.mutt/$THEME.muttrc

# character set on messages that we send
# if there is no character set given on incoming messages, it is probably windows
set charset="utf-8"
set assumed_charset="utf-8"
set send_charset="us-ascii:utf-8"

# make sure Vim knows Mutt is a mail client and that we compose an UTF-8 encoded message
set editor="$EDITOR -c 'set syntax=mail ft=mail'"

# just scroll one line instead of full page
set menu_scroll=yes

set mark_old=no

set quit=ask-yes

# we want to see some MIME types inline, see below this code listing for explanation
#auto_view application/msword
#auto_view application/pdf
auto_view text/html text/calendar application/ics
alternative_order text/plain text/enriched text/html text/calendar

# make default search pattern to search in To, Cc and Subject
set simple_search="~f %s | ~C %s | ~s %s"

# threading preferences, sort by threads
set sort=threads
set strict_threads=yes

# show spam score (from SpamAssassin only) when reading a message
#spam "X-Spam-Score: ([0-9\\.]+).*" "SA: %1"
#set pager_format = " %C - %[%H:%M] %.20v, %s%* %?H? [%H] ?"

# do not show all headers, just a few
ignore          *
unignore        From To Cc Bcc Date Subject
# and in this order
unhdr_order     *
hdr_order       From: To: Cc: Bcc: Date: Subject:

# Sidebar
set sidebar_visible
set sidebar_short_path
set sidebar_delim_chars="./"
set sidebar_folder_indent
set sidebar_indent_string="  "
set sidebar_format = "%B%?F? [%F]?%* %?N?%N/?%S"
set mail_check_stats

# Toggle sidebar
bind index,pager \Ch sidebar-toggle-visible

# Move the highlight to the previous mailbox
bind index,pager \Cp sidebar-prev

# Move the highlight to the next mailbox
bind index,pager \Cn sidebar-next

# Open the highlighted mailbox
bind index,pager \Co sidebar-open

# Move the highlight to the prev mailbox with new mail
bind index,pager \ep sidebar-prev-new

# Move the highlight to the next mailbox with new mail
bind index,pager \en sidebar-next-new

# vim-like bindings
bind index,attach,pager g noop
bind attach,pager d noop
bind pager gg top
bind alias,index,browser,query,attach G last-entry
bind pager G bottom
bind index n search-next
bind index N search-opposite
bind alias,attach,browser,index,query gg first-entry
bind alias,attach,browser,index,query G last-entry
bind alias,attach,browser,index,query,pager \CF next-page
bind alias,attach,browser,index,query,pager \CB previous-page
bind alias,attach,browser,index,query,pager \Cu half-up
bind alias,attach,browser,index,query,pager \Cd half-down
bind alias,attach,browser,index,query,pager \Ce next-line
bind alias,attach,browser,index,query,pager \Cy previous-line
bind index,pager                dd  delete-message
bind attach                     dd  delete-entry
bind attach,index,pager         gr  group-reply

# mark all as read
macro index A \
    "<tag-pattern>~N<enter><tag-prefix><clear-flag>N<untag-pattern>.<enter>" \
    "mark all new as read"
macro index,pager u "<set-flag>N" "Mark as unread"

# urlscan
macro index,pager \eb "<pipe-message> urlscan<Enter>" "call urlscan to extract URLs out of a message"
macro attach,compose \eb "<pipe-entry> urlscan<Enter>" "call urlscan to extract URLs out of a message"

macro attach s "<save-entry><bol>~/downloads/<eol>"
macro index,pager \eo "<enter-command>unset wait_key<enter><shell-escape>~/scripts/run_tmux.sh offlineimap -o<enter>" "run offlineimap"
macro index,pager \eq "<enter-command>unset wait_key<enter><shell-escape>~/scripts/run_tmux.sh offlineimap -qo<enter>" "run offlineimap quick"

# decode iso-8859-2 attachment names
set rfc2047_parameters = yes

# account settings
set folder = "~/mail"
unset confirmappend

# msmtp
set ssl_force_tls = yes

# notmuch
macro index <F8> \
"<enter-command>unset wait_key<enter><shell-escape>/usr/bin/notmuch-mutt --prompt search<enter><change-folder-readonly>~/.cache/notmuch/mutt/results<enter>" \
"search mail (using notmuch)"
macro index <F9> \
"<enter-command>unset wait_key<enter><pipe-message>/usr/bin/notmuch-mutt thread<enter><change-folder-readonly>~/.cache/notmuch/mutt/results<enter><enter-command>set wait_key<enter>" \
"search and reconstruct owning thread (using notmuch)"
